// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny


package appcfg

import "fmt"

var _ Value = &BoolSlice{}

// String implements flag.Value interface.
func (v *BoolSlice) String() string {
	if v == nil || v.values == nil {
		return ""
	}
	return fmt.Sprint(v.values) //nolint:gocritic // For genny.
}

// Set implements flag.Value interface.
func (v *BoolSlice) Set(s string) error {
	if v.completed {
		v.completed = false
		v.values = nil
	}
	err := v.set(s)
	if err != nil {
		v.values = nil
	}
	return err
}

// Get implements flag.Getter interface.
func (v *BoolSlice) Get() interface{} {
	if v.values == nil {
		return nil
	}
	v.completed = true
	return v.values
}

// Type implements pflag.Value interface.
func (*BoolSlice) Type() string {
	return "BoolSlice"
}


var _ Value = &StringArray{}

// String implements flag.Value interface.
func (v *StringArray) String() string {
	if v == nil || v.values == nil {
		return ""
	}
	return fmt.Sprint(v.values) //nolint:gocritic // For genny.
}

// Set implements flag.Value interface.
func (v *StringArray) Set(s string) error {
	if v.completed {
		v.completed = false
		v.values = nil
	}
	err := v.set(s)
	if err != nil {
		v.values = nil
	}
	return err
}

// Get implements flag.Getter interface.
func (v *StringArray) Get() interface{} {
	if v.values == nil {
		return nil
	}
	v.completed = true
	return v.values
}

// Type implements pflag.Value interface.
func (*StringArray) Type() string {
	return "StringArray"
}


var _ Value = &StringSlice{}

// String implements flag.Value interface.
func (v *StringSlice) String() string {
	if v == nil || v.values == nil {
		return ""
	}
	return fmt.Sprint(v.values) //nolint:gocritic // For genny.
}

// Set implements flag.Value interface.
func (v *StringSlice) Set(s string) error {
	if v.completed {
		v.completed = false
		v.values = nil
	}
	err := v.set(s)
	if err != nil {
		v.values = nil
	}
	return err
}

// Get implements flag.Getter interface.
func (v *StringSlice) Get() interface{} {
	if v.values == nil {
		return nil
	}
	v.completed = true
	return v.values
}

// Type implements pflag.Value interface.
func (*StringSlice) Type() string {
	return "StringSlice"
}


var _ Value = &NotEmptyStringArray{}

// String implements flag.Value interface.
func (v *NotEmptyStringArray) String() string {
	if v == nil || v.values == nil {
		return ""
	}
	return fmt.Sprint(v.values) //nolint:gocritic // For genny.
}

// Set implements flag.Value interface.
func (v *NotEmptyStringArray) Set(s string) error {
	if v.completed {
		v.completed = false
		v.values = nil
	}
	err := v.set(s)
	if err != nil {
		v.values = nil
	}
	return err
}

// Get implements flag.Getter interface.
func (v *NotEmptyStringArray) Get() interface{} {
	if v.values == nil {
		return nil
	}
	v.completed = true
	return v.values
}

// Type implements pflag.Value interface.
func (*NotEmptyStringArray) Type() string {
	return "NotEmptyStringArray"
}


var _ Value = &NotEmptyStringSlice{}

// String implements flag.Value interface.
func (v *NotEmptyStringSlice) String() string {
	if v == nil || v.values == nil {
		return ""
	}
	return fmt.Sprint(v.values) //nolint:gocritic // For genny.
}

// Set implements flag.Value interface.
func (v *NotEmptyStringSlice) Set(s string) error {
	if v.completed {
		v.completed = false
		v.values = nil
	}
	err := v.set(s)
	if err != nil {
		v.values = nil
	}
	return err
}

// Get implements flag.Getter interface.
func (v *NotEmptyStringSlice) Get() interface{} {
	if v.values == nil {
		return nil
	}
	v.completed = true
	return v.values
}

// Type implements pflag.Value interface.
func (*NotEmptyStringSlice) Type() string {
	return "NotEmptyStringSlice"
}


var _ Value = &OneOfStringSlice{}

// String implements flag.Value interface.
func (v *OneOfStringSlice) String() string {
	if v == nil || v.values == nil {
		return ""
	}
	return fmt.Sprint(v.values) //nolint:gocritic // For genny.
}

// Set implements flag.Value interface.
func (v *OneOfStringSlice) Set(s string) error {
	if v.completed {
		v.completed = false
		v.values = nil
	}
	err := v.set(s)
	if err != nil {
		v.values = nil
	}
	return err
}

// Get implements flag.Getter interface.
func (v *OneOfStringSlice) Get() interface{} {
	if v.values == nil {
		return nil
	}
	v.completed = true
	return v.values
}

// Type implements pflag.Value interface.
func (*OneOfStringSlice) Type() string {
	return "OneOfStringSlice"
}


var _ Value = &EndpointSlice{}

// String implements flag.Value interface.
func (v *EndpointSlice) String() string {
	if v == nil || v.values == nil {
		return ""
	}
	return fmt.Sprint(v.values) //nolint:gocritic // For genny.
}

// Set implements flag.Value interface.
func (v *EndpointSlice) Set(s string) error {
	if v.completed {
		v.completed = false
		v.values = nil
	}
	err := v.set(s)
	if err != nil {
		v.values = nil
	}
	return err
}

// Get implements flag.Getter interface.
func (v *EndpointSlice) Get() interface{} {
	if v.values == nil {
		return nil
	}
	v.completed = true
	return v.values
}

// Type implements pflag.Value interface.
func (*EndpointSlice) Type() string {
	return "EndpointSlice"
}


var _ Value = &IntSlice{}

// String implements flag.Value interface.
func (v *IntSlice) String() string {
	if v == nil || v.values == nil {
		return ""
	}
	return fmt.Sprint(v.values) //nolint:gocritic // For genny.
}

// Set implements flag.Value interface.
func (v *IntSlice) Set(s string) error {
	if v.completed {
		v.completed = false
		v.values = nil
	}
	err := v.set(s)
	if err != nil {
		v.values = nil
	}
	return err
}

// Get implements flag.Getter interface.
func (v *IntSlice) Get() interface{} {
	if v.values == nil {
		return nil
	}
	v.completed = true
	return v.values
}

// Type implements pflag.Value interface.
func (*IntSlice) Type() string {
	return "IntSlice"
}


var _ Value = &Int64Slice{}

// String implements flag.Value interface.
func (v *Int64Slice) String() string {
	if v == nil || v.values == nil {
		return ""
	}
	return fmt.Sprint(v.values) //nolint:gocritic // For genny.
}

// Set implements flag.Value interface.
func (v *Int64Slice) Set(s string) error {
	if v.completed {
		v.completed = false
		v.values = nil
	}
	err := v.set(s)
	if err != nil {
		v.values = nil
	}
	return err
}

// Get implements flag.Getter interface.
func (v *Int64Slice) Get() interface{} {
	if v.values == nil {
		return nil
	}
	v.completed = true
	return v.values
}

// Type implements pflag.Value interface.
func (*Int64Slice) Type() string {
	return "Int64Slice"
}


var _ Value = &UintSlice{}

// String implements flag.Value interface.
func (v *UintSlice) String() string {
	if v == nil || v.values == nil {
		return ""
	}
	return fmt.Sprint(v.values) //nolint:gocritic // For genny.
}

// Set implements flag.Value interface.
func (v *UintSlice) Set(s string) error {
	if v.completed {
		v.completed = false
		v.values = nil
	}
	err := v.set(s)
	if err != nil {
		v.values = nil
	}
	return err
}

// Get implements flag.Getter interface.
func (v *UintSlice) Get() interface{} {
	if v.values == nil {
		return nil
	}
	v.completed = true
	return v.values
}

// Type implements pflag.Value interface.
func (*UintSlice) Type() string {
	return "UintSlice"
}


var _ Value = &Uint64Slice{}

// String implements flag.Value interface.
func (v *Uint64Slice) String() string {
	if v == nil || v.values == nil {
		return ""
	}
	return fmt.Sprint(v.values) //nolint:gocritic // For genny.
}

// Set implements flag.Value interface.
func (v *Uint64Slice) Set(s string) error {
	if v.completed {
		v.completed = false
		v.values = nil
	}
	err := v.set(s)
	if err != nil {
		v.values = nil
	}
	return err
}

// Get implements flag.Getter interface.
func (v *Uint64Slice) Get() interface{} {
	if v.values == nil {
		return nil
	}
	v.completed = true
	return v.values
}

// Type implements pflag.Value interface.
func (*Uint64Slice) Type() string {
	return "Uint64Slice"
}


var _ Value = &Float64Slice{}

// String implements flag.Value interface.
func (v *Float64Slice) String() string {
	if v == nil || v.values == nil {
		return ""
	}
	return fmt.Sprint(v.values) //nolint:gocritic // For genny.
}

// Set implements flag.Value interface.
func (v *Float64Slice) Set(s string) error {
	if v.completed {
		v.completed = false
		v.values = nil
	}
	err := v.set(s)
	if err != nil {
		v.values = nil
	}
	return err
}

// Get implements flag.Getter interface.
func (v *Float64Slice) Get() interface{} {
	if v.values == nil {
		return nil
	}
	v.completed = true
	return v.values
}

// Type implements pflag.Value interface.
func (*Float64Slice) Type() string {
	return "Float64Slice"
}


var _ Value = &IntBetweenSlice{}

// String implements flag.Value interface.
func (v *IntBetweenSlice) String() string {
	if v == nil || v.values == nil {
		return ""
	}
	return fmt.Sprint(v.values) //nolint:gocritic // For genny.
}

// Set implements flag.Value interface.
func (v *IntBetweenSlice) Set(s string) error {
	if v.completed {
		v.completed = false
		v.values = nil
	}
	err := v.set(s)
	if err != nil {
		v.values = nil
	}
	return err
}

// Get implements flag.Getter interface.
func (v *IntBetweenSlice) Get() interface{} {
	if v.values == nil {
		return nil
	}
	v.completed = true
	return v.values
}

// Type implements pflag.Value interface.
func (*IntBetweenSlice) Type() string {
	return "IntBetweenSlice"
}


var _ Value = &PortSlice{}

// String implements flag.Value interface.
func (v *PortSlice) String() string {
	if v == nil || v.values == nil {
		return ""
	}
	return fmt.Sprint(v.values) //nolint:gocritic // For genny.
}

// Set implements flag.Value interface.
func (v *PortSlice) Set(s string) error {
	if v.completed {
		v.completed = false
		v.values = nil
	}
	err := v.set(s)
	if err != nil {
		v.values = nil
	}
	return err
}

// Get implements flag.Getter interface.
func (v *PortSlice) Get() interface{} {
	if v.values == nil {
		return nil
	}
	v.completed = true
	return v.values
}

// Type implements pflag.Value interface.
func (*PortSlice) Type() string {
	return "PortSlice"
}


var _ Value = &ListenPortSlice{}

// String implements flag.Value interface.
func (v *ListenPortSlice) String() string {
	if v == nil || v.values == nil {
		return ""
	}
	return fmt.Sprint(v.values) //nolint:gocritic // For genny.
}

// Set implements flag.Value interface.
func (v *ListenPortSlice) Set(s string) error {
	if v.completed {
		v.completed = false
		v.values = nil
	}
	err := v.set(s)
	if err != nil {
		v.values = nil
	}
	return err
}

// Get implements flag.Getter interface.
func (v *ListenPortSlice) Get() interface{} {
	if v.values == nil {
		return nil
	}
	v.completed = true
	return v.values
}

// Type implements pflag.Value interface.
func (*ListenPortSlice) Type() string {
	return "ListenPortSlice"
}


var _ Value = &IPNetSlice{}

// String implements flag.Value interface.
func (v *IPNetSlice) String() string {
	if v == nil || v.values == nil {
		return ""
	}
	return fmt.Sprint(v.values) //nolint:gocritic // For genny.
}

// Set implements flag.Value interface.
func (v *IPNetSlice) Set(s string) error {
	if v.completed {
		v.completed = false
		v.values = nil
	}
	err := v.set(s)
	if err != nil {
		v.values = nil
	}
	return err
}

// Get implements flag.Getter interface.
func (v *IPNetSlice) Get() interface{} {
	if v.values == nil {
		return nil
	}
	v.completed = true
	return v.values
}

// Type implements pflag.Value interface.
func (*IPNetSlice) Type() string {
	return "IPNetSlice"
}


var _ Value = &HostPortSlice{}

// String implements flag.Value interface.
func (v *HostPortSlice) String() string {
	if v == nil || v.values == nil {
		return ""
	}
	return fmt.Sprint(v.values) //nolint:gocritic // For genny.
}

// Set implements flag.Value interface.
func (v *HostPortSlice) Set(s string) error {
	if v.completed {
		v.completed = false
		v.values = nil
	}
	err := v.set(s)
	if err != nil {
		v.values = nil
	}
	return err
}

// Get implements flag.Getter interface.
func (v *HostPortSlice) Get() interface{} {
	if v.values == nil {
		return nil
	}
	v.completed = true
	return v.values
}

// Type implements pflag.Value interface.
func (*HostPortSlice) Type() string {
	return "HostPortSlice"
}
